diff --git a/src/App.vue b/src/App.vue
index eb8dfd7..7274172 100644
--- a/src/App.vue
+++ b/src/App.vue
@@ -1,5 +1,5 @@
 <template>
-  <div>
+  <div class="relative">
     <svg
       class="fixed top-3 right-3 w-8 h-8 grid place-items-center z-[1000] text-gray-200 fill-current bg-black opacity-90 rounded p-[0.3rem] hover:opacity-75 cursor-pointer"
       :class="settingsAreOpen && 'border-2 border-green-500'"
@@ -32,6 +32,19 @@
 			c2.497,0,4.524,2.026,4.524,4.525S46.267,16.921,43.77,16.921z"
       />
     </svg>
+    <svg
+      class="fixed top-3 right-[3.25rem] w-8 h-8 grid place-items-center z-[1000] text-gray-200 fill-current bg-black opacity-90 rounded p-[0.3rem] hover:opacity-75 cursor-pointer"
+      viewBox="0 0 24 24"
+      height="24"
+      width="24"
+      xmlns="http://www.w3.org/2000/svg"
+      @click="addDraggableItem"
+    >
+      <path
+        xmlns="http://www.w3.org/2000/svg"
+        d="M12 4C12.5523 4 13 4.44772 13 5V11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H13V19C13 19.5523 12.5523 20 12 20C11.4477 20 11 19.5523 11 19V13H5C4.44772 13 4 12.5523 4 12C4 11.4477 4.44772 11 5 11H11V5C11 4.44772 11.4477 4 12 4Z"
+      ></path>
+    </svg>
     <SettingsWindow v-show="settingsAreOpen" @close="settingsAreOpen = false" />
     <LandscapeSummary v-show="$store.state.preferences.showSummary" />
     <LandscapeOverview v-show="$store.state.preferences.showOverview" />
@@ -126,6 +139,9 @@ export default {
       this.settingsAreOpen = !this.settingsAreOpen
       e.currentTarget.blur()
     },
+    addDraggableItem() {
+      this.$store.commit('addDraggableItem')
+    }
   },
   mounted() {
     const mainContainer = this.$refs.mainContainer
diff --git a/src/components/DraggableItems/DraggableItem.vue b/src/components/DraggableItems/DraggableItem.vue
index 90c5e55..5e17c1c 100644
--- a/src/components/DraggableItems/DraggableItem.vue
+++ b/src/components/DraggableItems/DraggableItem.vue
@@ -55,13 +55,21 @@ export default {
     temporaryPosition: {
       type: [Object, null],
     },
+    isBeingDragged: {
+      type: Boolean,
+      default: false,
+    },
   },
   computed: {
     offsetTop() {
-      return `${this.temporaryPosition?.y ?? this.item.position?.y}px`
+      return `${
+        this.isBeingDragged ? this.temporaryPosition?.y : this.item.position?.y
+      }px`
     },
     offsetLeft() {
-      return `${this.temporaryPosition?.x ?? this.item.position?.x}px`
+      return `${
+        this.isBeingDragged ? this.temporaryPosition?.x : this.item.position?.x
+      }px`
     },
     itemText: {
       get() {
diff --git a/src/components/DraggableItems/DraggableItemsController.vue b/src/components/DraggableItems/DraggableItemsController.vue
index 269b535..6efbb87 100644
--- a/src/components/DraggableItems/DraggableItemsController.vue
+++ b/src/components/DraggableItems/DraggableItemsController.vue
@@ -5,6 +5,7 @@
       :key="item.id + item.position.x + item.position.y"
       :item="item"
       :temporaryPosition="temporaryPosition"
+      :isBeingDragged="itemBeingDragged && item.id == itemBeingDragged.id"
       @dragstart="onDragstart"
     />
   </div>
@@ -23,12 +24,14 @@ export default {
       temporaryPosition: null,
       originalPosition: null,
       originalPositionOnPage: null,
+      itemBeingDragged: null,
     }
   },
   methods: {
     onDragstart(e, item) {
       this.originalPositionOnPage = { x: e.pageX, y: e.pageY }
-      
+      this.itemBeingDragged = item
+
       this.temporaryPosition = {
         x: item.position.x,
         y: item.position.y,
@@ -39,12 +42,8 @@ export default {
         y: item.position.y,
       }
 
-      this.onDragendListener = () => {
-        this.onDragend(item)
-      }
-
       document.addEventListener('mousemove', this.onDrag)
-      document.addEventListener('mouseup', this.onDragendListener)
+      document.addEventListener('mouseup', this.onDragend)
     },
     onDrag(e) {
       const dX = e.pageX - this.originalPositionOnPage.x
@@ -55,17 +54,19 @@ export default {
         y: this.originalPosition.y + dY / this.$store.state.grid.scale,
       }
     },
-    onDragend(item) {
-      const id = item.id
+    onDragend() {
+      const id = this.itemBeingDragged?.id
       const property = 'position'
-      const value = this.temporaryPosition ?? item.position
+      const value = this.temporaryPosition ?? this.itemBeingDragged.position
 
       this.$store.commit('updateDraggableItem', { id, property, value })
 
       this.temporaryPosition = null
+      this.originalPosition = null
+      this.itemBeingDragged = null
 
       document.removeEventListener('mousemove', this.onDrag)
-      document.removeEventListener('mouseup', this.onDragEndListener)
+      document.removeEventListener('mouseup', this.onDragend)
     },
   },
 }
diff --git a/src/store/modules/board.js b/src/store/modules/board.js
index fa90f25..9c2aefb 100644
--- a/src/store/modules/board.js
+++ b/src/store/modules/board.js
@@ -1,23 +1,16 @@
 import EventBus from '@/eventBus'
+import cuid from 'cuid'
+import {
+  getRandomHexColor,
+  getInvertedHexcolorGrayscale,
+} from '../../helpers/getDynamicColor'
 
 export default {
   state: () => ({
     tileRows: [],
     tileRowsStash: [],
     selectedTiles: [],
-    draggableItems: [
-      {
-        id: '1',
-        color: '#afa',
-        invertedColorGrayScale: '#070',
-        title: '',
-        text: '',
-        position: {
-          x: 0,
-          y: 0,
-        },
-      },
-    ],
+    draggableItems: [],
   }),
   mutations: {
     setBoardState(state, payload) {
@@ -52,6 +45,28 @@ export default {
       )
       targetResource && (targetResource.amount = value)
     },
+    addDraggableItem(state) {
+      const board = document.getElementById('board-container')
+      const height = board.offsetHeight
+      const width = board.offsetWidth
+      const randomX = Math.random() * width
+      const randomY = Math.random() * height
+      const randomColor = getRandomHexColor()
+
+      const newItem = {
+        id: cuid(),
+        color: randomColor,
+        invertedColorGrayScale: getInvertedHexcolorGrayscale(randomColor),
+        title: '',
+        text: '',
+        position: {
+          x: randomX,
+          y: randomY,
+        },
+      }
+
+      state.draggableItems.push(newItem)
+    },
     updateDraggableItem(state, { id, property, value }) {
       const targetItem = state.draggableItems.find(i => i.id == id)
       targetItem?.hasOwnProperty(property) && (targetItem[property] = value)
diff --git a/yarn.lock b/yarn.lock
index 1ca8bfb..b58ddc1 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -1172,46 +1172,6 @@
   resolved "https://registry.yarnpkg.com/@soda/get-current-script/-/get-current-script-1.0.2.tgz#a53515db25d8038374381b73af20bb4f2e508d87"
   integrity sha512-T7VNNlYVM1SgQ+VsMYhnDkcGmWhQdL0bDyGm5TlQ3GBXnJscEClUUOKduWTmm2zCnvNLC1hc3JpuXjs/nFOc5w==
 
-"@tailwindcss/postcss7-compat@^2.2.4", "tailwindcss@npm:@tailwindcss/postcss7-compat":
-  version "2.2.4"
-  resolved "https://registry.yarnpkg.com/@tailwindcss/postcss7-compat/-/postcss7-compat-2.2.4.tgz#0e5b446e94cfdf892e4f76cecb703c8d698050f3"
-  integrity sha512-lFIBdD1D2w3RgHFg7kNB7U5LOlfbd+KXTzcLyC/RlQ9eVko6GjNCKpN/kdmfF9wiGxbSDT/3mousXeMZdOOuBg==
-  dependencies:
-    "@fullhuman/postcss-purgecss" "^3.1.3"
-    arg "^5.0.0"
-    autoprefixer "^9"
-    bytes "^3.0.0"
-    chalk "^4.1.1"
-    chokidar "^3.5.2"
-    color "^3.1.3"
-    cosmiconfig "^7.0.0"
-    detective "^5.2.0"
-    didyoumean "^1.2.1"
-    dlv "^1.1.3"
-    fast-glob "^3.2.5"
-    fs-extra "^10.0.0"
-    glob-parent "^6.0.0"
-    html-tags "^3.1.0"
-    is-glob "^4.0.1"
-    lodash "^4.17.21"
-    lodash.topath "^4.5.2"
-    modern-normalize "^1.1.0"
-    node-emoji "^1.8.1"
-    normalize-path "^3.0.0"
-    object-hash "^2.2.0"
-    postcss "^7"
-    postcss-functions "^3"
-    postcss-js "^2"
-    postcss-load-config "^3.1.0"
-    postcss-nested "^4"
-    postcss-selector-parser "^6.0.6"
-    postcss-value-parser "^4.1.0"
-    pretty-hrtime "^1.0.3"
-    quick-lru "^5.1.1"
-    reduce-css-calc "^2.1.8"
-    resolve "^1.20.0"
-    tmp "^0.2.1"
-
 "@types/anymatch@*":
   version "1.3.1"
   resolved "https://registry.yarnpkg.com/@types/anymatch/-/anymatch-1.3.1.tgz#336badc1beecb9dacc38bea2cf32adf627a8421a"
@@ -9717,6 +9677,46 @@ symbol-tree@^3.2.2:
   resolved "https://registry.yarnpkg.com/symbol-tree/-/symbol-tree-3.2.4.tgz#430637d248ba77e078883951fb9aa0eed7c63fa2"
   integrity sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==
 
+"tailwindcss@npm:@tailwindcss/postcss7-compat@^2.1.2":
+  version "2.2.4"
+  resolved "https://registry.yarnpkg.com/@tailwindcss/postcss7-compat/-/postcss7-compat-2.2.4.tgz#0e5b446e94cfdf892e4f76cecb703c8d698050f3"
+  integrity sha512-lFIBdD1D2w3RgHFg7kNB7U5LOlfbd+KXTzcLyC/RlQ9eVko6GjNCKpN/kdmfF9wiGxbSDT/3mousXeMZdOOuBg==
+  dependencies:
+    "@fullhuman/postcss-purgecss" "^3.1.3"
+    arg "^5.0.0"
+    autoprefixer "^9"
+    bytes "^3.0.0"
+    chalk "^4.1.1"
+    chokidar "^3.5.2"
+    color "^3.1.3"
+    cosmiconfig "^7.0.0"
+    detective "^5.2.0"
+    didyoumean "^1.2.1"
+    dlv "^1.1.3"
+    fast-glob "^3.2.5"
+    fs-extra "^10.0.0"
+    glob-parent "^6.0.0"
+    html-tags "^3.1.0"
+    is-glob "^4.0.1"
+    lodash "^4.17.21"
+    lodash.topath "^4.5.2"
+    modern-normalize "^1.1.0"
+    node-emoji "^1.8.1"
+    normalize-path "^3.0.0"
+    object-hash "^2.2.0"
+    postcss "^7"
+    postcss-functions "^3"
+    postcss-js "^2"
+    postcss-load-config "^3.1.0"
+    postcss-nested "^4"
+    postcss-selector-parser "^6.0.6"
+    postcss-value-parser "^4.1.0"
+    pretty-hrtime "^1.0.3"
+    quick-lru "^5.1.1"
+    reduce-css-calc "^2.1.8"
+    resolve "^1.20.0"
+    tmp "^0.2.1"
+
 tapable@^1.0.0, tapable@^1.1.3:
   version "1.1.3"
   resolved "https://registry.yarnpkg.com/tapable/-/tapable-1.1.3.tgz#a1fccc06b58db61fd7a45da2da44f5f3a3e67ba2"
